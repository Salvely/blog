{
    "version": "https://jsonfeed.org/version/1",
    "title": "望春风 • All posts by \"csapp 阅读笔记\" category",
    "description": "计算机&数理&文学爱好者，喜欢健身、下厨、听音乐和看电影",
    "home_page_url": "https://salvely.github.io/blog",
    "items": [
        {
            "id": "https://salvely.github.io/blog/2024/02/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8/15-213/CSAPP%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Ch3/",
            "url": "https://salvely.github.io/blog/2024/02/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8/15-213/CSAPP%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Ch3/",
            "title": "CSAPP Chapter 3 - 程序的机器级表示",
            "date_published": "2024-02-29T03:08:11.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "https://salvely.github.io/blog/2024/02/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8/15-213/CSAPP%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Ch2/",
            "url": "https://salvely.github.io/blog/2024/02/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8/15-213/CSAPP%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Ch2/",
            "title": "CSAPP Chapter 2 - 信息的表示和处理",
            "date_published": "2024-02-29T03:08:01.000Z",
            "content_html": "<h2 id=\"信息的表示和处理\"><a class=\"markdownIt-Anchor\" href=\"#信息的表示和处理\">#</a> 信息的表示和处理</h2>\n<p>信息 = 二进制位的组合 + 对位组合的解释：无符号，补码，有符号整数，浮点数。</p>\n<blockquote>\n<p>介绍了一点 C 语言的演变历史：汇编不方便 —&gt; ANSI C -&gt; ISC C90 -&gt; ISO C99 -&gt; ISO C11 (可以在编译时通过 <code>-std=cxx</code>  指定编译所使用的版本)</p>\n</blockquote>\n<p>1 个字节 = 8 位 -&gt; 内存中信息的编码以字节为单位 -&gt; 机器级程序将内存看作一个大的数组（虚拟内存）-&gt; 利用指针来存储地址 -&gt; 指针是机器级代码的概念，其组成包含类型 + 值，但是类型在内存当中是不可见的，在内存中所有东西都是没有感情的字节数组。-&gt; 指针的大小 = 字长（总线一次传输数据的最大字节数）-&gt; 虚拟地址空间以字编码 -&gt; 字长：虚拟地址空间的最大大小 -&gt; 32 位机器：4GB 64 位机器：16EB -&gt;  <code>32位程序</code>  &amp;  <code>64位程序</code> 指的是：如何编译</p>\n<p>字节的表示方法包括：16 进制，10 进制，2 进制等等。</p>\n<p>字节序：对跨越多个字节的程序对象，我们必须明确：</p>\n<ol>\n<li>地址在哪里：存储的最低字节处</li>\n<li>如何排列他们：大端法 or 小端法？</li>\n</ol>\n<blockquote>\n<p>ASCII 编码与 Unicode 编码。Unicode 和 UTF-8 是什么关系？</p>\n</blockquote>\n<p>布尔代数与位运算，其有分配律，且 <code>(a^b)^a = b</code> ，位向量掩码，经典的 <code>inplace_swap</code>  利用异或进行值交换</p>\n<p>逻辑运算，short circuits</p>\n<p>移位运算：</p>\n<ol>\n<li>逻辑右移</li>\n<li>算术右移（有符号数算术右移，无符号数逻辑右移，Java 使用 <code>&gt;&gt;&gt;</code>  来进行逻辑右移）</li>\n</ol>\n<blockquote>\n<p>注意：</p>\n<ol>\n<li>移动 k 位（k 很大时），移动 k % w 位</li>\n<li>加法和减法的优先级 &gt; 移位运算优先级，如  <code>1&lt;&lt;2+3&lt;&lt;4</code> ，因此移位时记得加括号</li>\n</ol>\n</blockquote>\n<h2 id=\"整数的表示和运算\"><a class=\"markdownIt-Anchor\" href=\"#整数的表示和运算\">#</a> 整数的表示和运算</h2>\n<p><img data-src=\"numbers.png\" alt=\"numbers.png\"></p>\n<blockquote>\n<ol>\n<li>\n<p>通过引用 <code>#include &lt;stdint.h&gt;</code> ，然后使用 <code>INTX_t</code> ，就可以使用特定位数的某种类型。可以使用宏 <code>%&quot; PRId32 &quot;</code>  来打印串。</p>\n</li>\n<li>\n<p>在 <code>&lt;limits.h&gt;</code>  中限定了 <code>INT_MAX</code> , <code>INT_MIN</code> ， <code>UINT_MAX</code>  等等</p>\n</li>\n<li>\n<p><code>INT_MIN = -(-INT_MAX - 1)</code></p>\n</li>\n</ol>\n</blockquote>\n<h2 id=\"浮点数的表示\"><a class=\"markdownIt-Anchor\" href=\"#浮点数的表示\">#</a> 浮点数的表示</h2>\n<p>浮点数针对范围大，精度低的表示。整数针对范围小，精度高的表示。</p>\n<ol>\n<li>单精度浮点数 ( <code>float</code> )：1 位符号位 + 8 位阶码 + 23 位位数</li>\n<li>双精度浮点数 ( <code>double</code> )：1 位符号位 + 11 位阶码 + 52 位尾数</li>\n</ol>\n<p>其表示包含四种情况：</p>\n<p>阶码部分是使用了移码计算，其计算方法如下：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi><mo>=</mo><msup><mn>2</mn><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">bias = 2^{k-1} - 1\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">bia</span><span class=\"mord mathnormal\">s</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.9824em;vertical-align:-0.0833em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8991em;\"><span style=\"top:-3.113em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin mtight\">−</span><span class=\"mord mtight\">1</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">1</span></span></span></span></span></p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo>=</mo><mi>E</mi><mo>−</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">exp = E - bias\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7667em;vertical-align:-0.0833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">bia</span><span class=\"mord mathnormal\">s</span></span></span></span></span></p>\n<ol>\n<li>规格化数：阶码部分不全为 0 也不全为 1<br>\n 其尾数计算方法如下：<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>M</mi><mo>=</mo><mn>1</mn><mo>+</mo><mi>f</mi></mrow><annotation encoding=\"application/x-tex\"> M = 1 + f\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">M</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span></p>\n</li>\n<li>非规格化数：阶码部分全为 0<br>\n 其尾数部分为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">f</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8889em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span>，阶码部分计算如下：<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo>=</mo><mn>1</mn><mo>−</mo><mi>b</mi><mi>i</mi><mi>a</mi><mi>s</mi></mrow><annotation encoding=\"application/x-tex\">  exp = 1 - bias\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.625em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">p</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">bia</span><span class=\"mord mathnormal\">s</span></span></span></span></span></p>\n这种阶码的计算方式实现了非规格化数到规格化数的平滑过渡。</li>\n<li>无穷大：阶码部分全为 1，尾数部分全为 0</li>\n<li>NaN：阶码部分全为 1，尾数部分不为 0</li>\n</ol>\n<h2 id=\"重点习题\"><a class=\"markdownIt-Anchor\" href=\"#重点习题\">#</a> 重点习题</h2>\n<ul>\n<li>2 进制，16 进制，10 进制之间的转化</li>\n<li>大端法和小端法对同一个数值的不同存储方式</li>\n<li>整数和浮点数表示的重合部分</li>\n<li>布尔代数和位运算</li>\n<li>位向量掩码</li>\n<li>布尔运算之间的组合（or,and,xor,not）</li>\n<li>逻辑运算</li>\n<li>使用位级运算和逻辑运算实现 <code>^</code></li>\n<li>移位运算的计算</li>\n<li>同样位表示的无符号和补码值</li>\n<li>相同位表示下，无符号数和补码值的转换</li>\n<li>无符号数和有符号数的比较（默认转化为无符号数后比较）</li>\n<li>有符号数 / 无符号数的符号扩展</li>\n<li>不同类型 + 大小之间的值的转换</li>\n<li>数值的截断</li>\n<li>隐式转换可能带来的程序问题，以及如何避免</li>\n<li>无符号数的加法和溢出判定</li>\n<li>无符号数求反</li>\n<li>有符号的加法和溢出判定</li>\n<li>有符号数求反</li>\n<li>无符号的乘法</li>\n<li>补码乘法</li>\n<li>无符号的乘法</li>\n<li>乘以 2 的幂</li>\n<li>乘以常数 &amp; 2 种移位运算</li>\n<li>无符号数除法</li>\n<li>有符号数除法（向上舍入）</li>\n<li>小数的二进制表示和十进制表示</li>\n<li>浮点数的表示（规格化，非规格化，INF，NaN 的情况）</li>\n<li>浮点数的计算</li>\n<li>浮点数的范围</li>\n<li>整数和浮点数之间的转换，以及其共有部分</li>\n<li>浮点数的舍入</li>\n<li>不同类型之间转换带来的精度损失（溢出或舍入）</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://salvely.github.io/blog/2024/02/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8/15-213/CSAPP%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Ch1/",
            "url": "https://salvely.github.io/blog/2024/02/29/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/%E7%B3%BB%E7%BB%9F/%E7%B3%BB%E7%BB%9F%E5%85%A5%E9%97%A8/15-213/CSAPP%20%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/Ch1/",
            "title": "CSAPP Chapter 1 - 计算机系统漫游",
            "date_published": "2024-02-29T03:06:06.000Z",
            "content_html": "<p><code>CSAPP</code>  的全称是 <code>Computer Systems: A Programmer's Perspective</code> ，中文翻译为 <code>《深入理解计算机系统》</code> 。这本书以 <code>hello world</code>  程序的运行贯穿始终，可以作为应用级别程序员一窥底层概貌的显微镜，也可以作为系统方向研究者的研究的方向概览。下面我们从第一章出发，进入计算机系统的世界。</p>\n<h2 id=\"信息-位-上下文\"><a class=\"markdownIt-Anchor\" href=\"#信息-位-上下文\">#</a> 信息 = 位 + 上下文</h2>\n<ol>\n<li>计算机系统 = 硬件 + 系统软件</li>\n<li>hello 从源程序开始 -&gt; 所有信息都用位表示 -&gt; 8 个位一组 -&gt; 字节 —&gt; ASCII 标准编码字节 —&gt; 文本字符 -&gt; 文本文件</li>\n<li>其他 -&gt; 二进制文件</li>\n<li>数据都是比特位，区别在于上下文如何解释他们</li>\n</ol>\n<blockquote>\n<p>C 语言的起源：作为用于 Unix 操作系统的语言被开发</p>\n</blockquote>\n<h2 id=\"程序与编译系统\"><a class=\"markdownIt-Anchor\" href=\"#程序与编译系统\">#</a> 程序与编译系统</h2>\n<p>编译过程：</p>\n<ol>\n<li><code>预处理器(cpp)</code>  修改原始  <code>hello.c</code>  程序，生成 <code>hello.i</code>  文件</li>\n<li><code>编译器(ccl)</code>  将其翻译为机器语言指令，生成 <code>hello.s</code>  文件</li>\n<li><code>汇编器(as)</code>  将其翻译为二进制目标文件 (可重定位目标程序)，生成 <code>hello.o</code>  文件</li>\n<li><code>链接器(ld)</code>  将其与其他预编译好的二进制目标文件链接起来，生成二进制可执行文件，生成 <code>hello</code>  文件</li>\n</ol>\n<blockquote>\n<p>什么是可重定位目标程序？</p>\n<p>GNU 项目 &amp; 自由软件概念 &amp; 开源运动（环境为 GNU 环境，内核为 Linux 内核）</p>\n</blockquote>\n<p>了解编译器工作过程的好处：</p>\n<ol>\n<li>优化程序性能</li>\n<li>理解链接时出现的错误</li>\n<li>避免安全漏洞</li>\n</ol>\n<h2 id=\"处理器-内存中机器指令\"><a class=\"markdownIt-Anchor\" href=\"#处理器-内存中机器指令\">#</a> 处理器 &amp; 内存中机器指令</h2>\n<p>此时 <code>hello</code>  已经被编译成可执行文件并存储在磁盘上。</p>\n<h3 id=\"硬件组成\"><a class=\"markdownIt-Anchor\" href=\"#硬件组成\">#</a> 硬件组成</h3>\n<ol>\n<li>总线：传输定长字节块，称为字（各系统不一样大）</li>\n<li>I/O 设备：键盘、鼠标、显示器、磁盘驱动器等。每个 I/O 设备通过一个控制器或适配器与 I/O 总线相连。其区别主要在于其封装方式。</li>\n<li>主存：临时存储设备，在处理器执行程序时，用来存放程序和程序处理的数据，由一组动态随机存储器（DRAM）芯片构成。从逻辑上来说，存储器是一个线性的字节数组，每个字节都有唯一的地址（数组索引）。</li>\n<li>处理器：是解释或执行存储在主存中引擎的指令。下一条要执行的指令的地址存储在 PC 中。CPU 中还包含一组寄存器。CPU 的设计根据指令集架构而不同。微体系结构描述的就是这个处理器是如何实现的。</li>\n</ol>\n<h3 id=\"hello-程序运行\"><a class=\"markdownIt-Anchor\" href=\"#hello-程序运行\">#</a> hello 程序运行</h3>\n<p>假设我们在 <code>shell</code>  中输入以下内容：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./hello</pre></td></tr></table></figure><p>其运行的过程如下：</p>\n<ol>\n<li>shell 程序将输入字符串 <code>./hello</code>  逐一读入寄存器（通过 I/O 桥和总线接口）</li>\n<li>将其转储到内存中（通过总线接口和 I/O 桥）</li>\n<li>shell 程序从磁盘中加载可执行的 <code>hello</code>  可执行文件，将其从磁盘通过 I/O 桥复制到主存（DMA 技术，如果没有 DMA 技术，还需要通过处理器才能到达主存）</li>\n<li>处理器执行 <code>hello</code>  程序中的指令</li>\n<li><code>hello world</code>  字符串：主存 —&gt; I/O 桥 -&gt; 总线接口 —&gt; 寄存器文件 -&gt; 总线接口 -&gt; I/O 桥 -&gt; 图形适配器 —&gt; 显示器</li>\n</ol>\n<h2 id=\"高速缓存-存储设备层次结构\"><a class=\"markdownIt-Anchor\" href=\"#高速缓存-存储设备层次结构\">#</a> 高速缓存 &amp; 存储设备层次结构</h2>\n<p>高速缓存：较大的存储设备运行慢，造价低。而近年来处理器和主存之间的速度差距还在增大。因此，高速缓冲存储器 (cache) 的目的是尽量减少处理器和主存之间差异带来的速度差距。其采用更小更快的存储设备，作为暂时的存储区域。其使用静态随机访问存储器（SRAM）技术实现。</p>\n<blockquote>\n<p>核心：高速缓存的局部性原理</p>\n</blockquote>\n<p>存储设备层次结构：在处理器和较大较慢的设备之间插入一个更小更快的存储设备，上一层次设备作为第一层存储器的高速缓存。</p>\n<h2 id=\"操作系统资源管理-抽象\"><a class=\"markdownIt-Anchor\" href=\"#操作系统资源管理-抽象\">#</a> 操作系统资源管理 &amp; 抽象</h2>\n<p>操作系统：应用程序和硬件之间插入的一层软件。</p>\n<p>其几个基本功能包括：</p>\n<ol>\n<li>防止硬件被失控的应用程序滥用</li>\n<li>向应用程序提供简单一致的机制来控制复杂而又通常大不相同的低级硬件设备（利用抽象）\n<ol>\n<li>文件: I/O 设备抽象</li>\n<li>虚拟内存：主存 + 磁盘 I/O 设备抽象</li>\n<li>进程：对处理器、主存和 I/O 设备抽象</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p>Unix、POSIX 和标准 Unix 规范：</p>\n<p>时期 1：OS/360 + Multics<br>\n 时期 2：Unix（包含层次文件系统、作为用户级进程的 shell 概念）<br>\n时期 3：Unix 4.xBSD (增加了虚拟内存和 Internet 协议) + System V Unix + Solaris<br>\n 时期 4：IEEE 标准化 Unix 开发，将该标准命名为 POSIX 标准</p>\n</blockquote>\n<h3 id=\"进程-线程\"><a class=\"markdownIt-Anchor\" href=\"#进程-线程\">#</a> 进程 &amp; 线程</h3>\n<h4 id=\"进程\"><a class=\"markdownIt-Anchor\" href=\"#进程\">#</a> 进程</h4>\n<p>进程是操作系统对一个正在运行的程序的一种抽象，在这个系统中上可同时运行多个进程，而每个进程都好像在独自的使用硬件。并发运行时，是一个进程的指令与另一个进程的指令时间交错执行的。这是通过处理器在进程间切换实现的，该机制由操作系统实现，称之为上下文切换。上下文是指进程运行所需的所有状态信息，包括 PC、寄存器文件当前值、主存的内容。一般单处理器一次只能执行一个进程的代码，当它需要交错执行多个指令时，需要执行上下文切换，其步骤包括：</p>\n<ol>\n<li>保存当前进程的上下文</li>\n<li>恢复新进程的上下文</li>\n<li>将控制权转移到新进程（系统调用）</li>\n<li>新进程终止后，操作系统恢复旧进程上下文</li>\n<li>控制权转移回旧进程（系统调用）</li>\n</ol>\n<p>控制权的转移通过系统调用实现，它使得 CPU 的状态从用户态变为内核态。操作系统内核是系统管理全部进程所用代码和数据结构的集合。</p>\n<p>在单核处理器中，一个 CPU 可以并发的执行多个进程。而在多核 CPU 中，多个处理器可以同时执行多个进程。</p>\n<h4 id=\"线程\"><a class=\"markdownIt-Anchor\" href=\"#线程\">#</a> 线程</h4>\n<p>一个进程可以由多个称为线程的执行单元组成，每个线程都运行在进程的上下文中，并共享同样的代码和数据区域，但是不一样的是他们拥有各自独立的栈空间。</p>\n<h3 id=\"虚拟内存\"><a class=\"markdownIt-Anchor\" href=\"#虚拟内存\">#</a> 虚拟内存</h3>\n<p>虚拟内存为每个进程提供了一种假象，就是她们都单独的占有主存，每个进程看到的内存都是一致的，我们将其称之为虚拟地址空间。虚拟地址空间从低字节到高字节可划分为以下几个段：</p>\n<ol>\n<li>只读的程序代码和数据</li>\n<li>可读写的程序数据</li>\n<li>堆（malloc）分配</li>\n<li>共享库内存映射区域</li>\n<li>用户栈</li>\n<li>内核虚拟内存（用户代码不可见）</li>\n</ol>\n<h3 id=\"文件\"><a class=\"markdownIt-Anchor\" href=\"#文件\">#</a> 文件</h3>\n<p>文件可以作为 I/O 设备的抽象，I/O 设备具有各种不同的特性，但是通过将其抽象为文件，我们可以通过一组统一的接口来访问他们。</p>\n<h2 id=\"网络通信\"><a class=\"markdownIt-Anchor\" href=\"#网络通信\">#</a> 网络通信</h2>\n<p>网络也可以视为一个 I/O 设备，我们从文件中读写数据的方法很多都可以应用在网络设备的读写上。</p>\n<h2 id=\"重要主题\"><a class=\"markdownIt-Anchor\" href=\"#重要主题\">#</a> 重要主题</h2>\n<blockquote>\n<p>系统是软硬件的有机结合体！</p>\n</blockquote>\n<h3 id=\"amdahl-定律\"><a class=\"markdownIt-Anchor\" href=\"#amdahl-定律\">#</a> Amdahl 定律</h3>\n<p>当我们对系统的某个部分进行加速时，其对系统整体的性能的影响取决于该部分的重要性和加速程度。假设系统执行某应用程序所需时间为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">T_{old}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>，某部分执行时间与该时间的比例为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi></mrow><annotation encoding=\"application/x-tex\">\\alpha</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span></span></span></span>，而该部分性能提升比例为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span></span>。即该部分初始所需时间为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>α</mi><mo>∗</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\alpha*T_{old}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4653em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>, 现在为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mrow><mi>α</mi><mo>∗</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub></mrow><mi>k</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{\\alpha*T_{old}}{k}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2392em;vertical-align:-0.345em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8942em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.4159em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span><span class=\"mbin mtight\">∗</span><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3448em;\"><span style=\"top:-2.3488em;margin-left:-0.1389em;margin-right:0.0714em;\"><span class=\"pstrut\" style=\"height:2.5em;\"></span><span class=\"sizing reset-size3 size1 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1512em;\"><span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span>，那么总的执行时间应该为：</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><msub><mi>T</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>=</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy=\"false\">)</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><mo>+</mo><mfrac><mrow><mi>α</mi><mo>∗</mo><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub></mrow><mi>k</mi></mfrac></mrow><annotation encoding=\"application/x-tex\">    T_{new} = (1-\\alpha)T_{old}+\\frac{\\alpha*T_{old}}{k}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0463em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.03148em;\">k</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">∗</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>加速比 S 为</p>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>S</mi><mo>=</mo><mfrac><msub><mi>T</mi><mrow><mi>o</mi><mi>l</mi><mi>d</mi></mrow></msub><msub><mi>T</mi><mrow><mi>n</mi><mi>e</mi><mi>w</mi></mrow></msub></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>α</mi><mo stretchy=\"false\">)</mo><mo>+</mo><mfrac><mi>α</mi><mi>k</mi></mfrac></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">    S = \\frac{T_{old}}{T_{new}} = \\frac{1}{(1-\\alpha)+\\frac{\\alpha}{k}}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.1963em;vertical-align:-0.836em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3603em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.1514em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mord mathnormal mtight\">e</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.02691em;\">w</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3361em;\"><span style=\"top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">o</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal mtight\">d</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.836em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.3524em;vertical-align:-1.031em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3214em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.0037em;\">α</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6954em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.345em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.031em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<p>其结论为：要想显著加速整个系统，必须提升全系统中相当大的部分的速度。此外，当 k 趋近于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi mathvariant=\"normal\">∞</mi></mrow><annotation encoding=\"application/x-tex\">\\infin</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.4306em;\"></span><span class=\"mord\">∞</span></span></span></span> 时，最后的加速比等于<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>α</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">\\frac{1}{1-\\alpha}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.2484em;vertical-align:-0.4033em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8451em;\"><span style=\"top:-2.655em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span><span class=\"mbin mtight\">−</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.0037em;\">α</span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.394em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">1</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4033em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></p>\n<h3 id=\"并发和并行\"><a class=\"markdownIt-Anchor\" href=\"#并发和并行\">#</a> 并发和并行</h3>\n<p>我们的优化体现在，希望：</p>\n<ol>\n<li>计算机做的更多</li>\n<li>计算机运行更快</li>\n</ol>\n<h4 id=\"线程级并发\"><a class=\"markdownIt-Anchor\" href=\"#线程级并发\">#</a> 线程级并发</h4>\n<ol>\n<li>使用进程：有多个程序执行</li>\n<li>使用线程：一个进程中执行多个控制流</li>\n</ol>\n<h4 id=\"指令级并行\"><a class=\"markdownIt-Anchor\" href=\"#指令级并行\">#</a> 指令级并行</h4>\n<p>处理器同时执行多条指令。</p>\n<ol>\n<li>流水线：可以用来处理一条指令的不同部分，以此达到同时执行多条指令的目的</li>\n<li>达到比一个周期一条指令更快的执行速率，称之为超标量</li>\n</ol>\n<h4 id=\"单指令-多数据并行\"><a class=\"markdownIt-Anchor\" href=\"#单指令-多数据并行\">#</a> 单指令、多数据并行</h4>\n<p>许多处理器拥有特殊硬件，允许一条指令产生多个可以并行执行的操作，这种方式称为单指令、多数据，即 <code>SIMD并行</code> 。例如浮点数加法指令。编译器有时会试图抓取 SIMD 并行性特征，也可以使用特殊向量数据类型编写程序。</p>\n<h3 id=\"重点习题\"><a class=\"markdownIt-Anchor\" href=\"#重点习题\">#</a> 重点习题</h3>\n<ul>\n<li>Amdahl 定律计算</li>\n</ul>\n",
            "tags": []
        }
    ]
}